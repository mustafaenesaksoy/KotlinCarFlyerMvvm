// Generated by Dagger (https://dagger.dev).
package com.enesaksoy.kotlincarflyer.module;

import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_InjectAuthFactory implements Factory<FirebaseAuth> {
  @Override
  public FirebaseAuth get() {
    return injectAuth();
  }

  public static AppModule_InjectAuthFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static FirebaseAuth injectAuth() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.injectAuth());
  }

  private static final class InstanceHolder {
    private static final AppModule_InjectAuthFactory INSTANCE = new AppModule_InjectAuthFactory();
  }
}
