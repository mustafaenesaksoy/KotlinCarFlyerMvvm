// Generated by Dagger (https://dagger.dev).
package com.enesaksoy.kotlincarflyer.module;

import com.google.firebase.storage.FirebaseStorage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_InjectStorageFactory implements Factory<FirebaseStorage> {
  @Override
  public FirebaseStorage get() {
    return injectStorage();
  }

  public static AppModule_InjectStorageFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static FirebaseStorage injectStorage() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.injectStorage());
  }

  private static final class InstanceHolder {
    private static final AppModule_InjectStorageFactory INSTANCE = new AppModule_InjectStorageFactory();
  }
}
