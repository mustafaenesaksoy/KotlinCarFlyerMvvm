// Generated by view binder compiler. Do not edit!
package com.enesaksoy.kotlincarflyer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.enesaksoy.kotlincarflyer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeedRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView rowAddressText;

  @NonNull
  public final TextView rowBrandText;

  @NonNull
  public final ImageView rowFlyerImageView;

  @NonNull
  public final TextView rowPhoneNumberText;

  private FeedRowBinding(@NonNull LinearLayout rootView, @NonNull TextView rowAddressText,
      @NonNull TextView rowBrandText, @NonNull ImageView rowFlyerImageView,
      @NonNull TextView rowPhoneNumberText) {
    this.rootView = rootView;
    this.rowAddressText = rowAddressText;
    this.rowBrandText = rowBrandText;
    this.rowFlyerImageView = rowFlyerImageView;
    this.rowPhoneNumberText = rowPhoneNumberText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeedRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeedRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.feed_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeedRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rowAddressText;
      TextView rowAddressText = ViewBindings.findChildViewById(rootView, id);
      if (rowAddressText == null) {
        break missingId;
      }

      id = R.id.rowBrandText;
      TextView rowBrandText = ViewBindings.findChildViewById(rootView, id);
      if (rowBrandText == null) {
        break missingId;
      }

      id = R.id.rowFlyerImageView;
      ImageView rowFlyerImageView = ViewBindings.findChildViewById(rootView, id);
      if (rowFlyerImageView == null) {
        break missingId;
      }

      id = R.id.rowPhoneNumberText;
      TextView rowPhoneNumberText = ViewBindings.findChildViewById(rootView, id);
      if (rowPhoneNumberText == null) {
        break missingId;
      }

      return new FeedRowBinding((LinearLayout) rootView, rowAddressText, rowBrandText,
          rowFlyerImageView, rowPhoneNumberText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
